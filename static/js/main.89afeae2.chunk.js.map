{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statvalues.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["FeedbackOptions","options","good","neutral","bad","onLeaveFeedback","type","name","onClick","Statvalues","value","defaultProps","Statistics","total","positiveFeedback","style","listStyle","Notification","message","Section","state","countonLeaveFeedback","evt","target","setState","prevState","countTotal","Object","values","reduce","acc","e","countPositiveFeedback","toFixed","title","this","props","keys","positiveFeedbackPercentage","Component","App","ReactDOM","render","document","querySelector"],"mappings":"6QAwBeA,EArBS,SAAC,GAAD,oBACtBC,QADsB,GACZC,EADY,KACNC,EADM,KACGC,EADH,KAEtBC,EAFsB,EAEtBA,gBAFsB,OAItB,oCACE,4BAAQC,KAAK,SAASC,KAAML,EAAMM,QAASH,GACxCH,GAEH,4BAAQI,KAAK,SAASC,KAAMJ,EAASK,QAASH,GAC3CF,GAEH,4BAAQG,KAAK,SAASC,KAAMH,EAAKI,QAASH,GACvCD,KCZDK,EAAa,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMG,EAAT,EAASA,MAAT,OAAqB,sCAAQH,EAAR,aAAiBG,KAEzDD,EAAWE,aAAe,CACxBD,MAAO,GAQMD,QCUAG,EApBI,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKS,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OACjB,oCACE,0CACA,wBAAIC,MAAO,CAAEC,UAAW,SACtB,kBAAC,EAAD,CAAYT,KAAK,OAAOG,MAAOR,IAC/B,kBAAC,EAAD,CAAYK,KAAK,UAAUG,MAAOP,IAClC,kBAAC,EAAD,CAAYI,KAAK,MAAMG,MAAON,IAC9B,kBAAC,EAAD,CAAYG,KAAK,QAAQG,MAAOG,IAChC,kBAAC,EAAD,CAAYN,KAAK,oBAAoBG,MAAOI,OCJnCG,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICGrBC,E,2MASnBC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,qBAAuB,SAAAC,GAAQ,IACrBf,EAASe,EAAIC,OAAbhB,KACR,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAAOkB,EAAUlB,GAAQ,O,EAI9BmB,WAAa,WACX,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,M,EAG5DC,sBAAwB,WACtB,MAAM,GAAN,QAAY,EAAKZ,MAAMlB,KAAO,EAAKwB,aAAgB,KAAKO,QAAQ,GAAhE,M,wEAGQ,IACAC,EAAUC,KAAKC,MAAfF,MADD,EAEwBC,KAAKf,MAA5BlB,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACjBH,EAAU0B,OAAOU,KAAKF,KAAKf,OAC3BP,EAAQsB,KAAKT,aACbY,EAA6BH,KAAKH,wBAExC,OACE,iCACE,4BAAKE,GACL,kBAAC,EAAD,CACEjC,QAASA,EACTI,gBAAiB8B,KAAKd,uBAEvBc,KAAKT,aAAe,EACnB,kBAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLS,MAAOA,EACPC,iBAAkBwB,IAGpB,kBAAC,EAAD,CAAcpB,QAAQ,2B,GArDKqB,aAAhBpB,EACZR,aAAe,CACpBuB,MAAO,yBCLX,IAMeM,EANH,kBACV,oCACE,kBAAC,EAAD,QCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.89afeae2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({\n  options: [good, neutral, bad],\n  onLeaveFeedback,\n}) => (\n  <>\n    <button type=\"button\" name={good} onClick={onLeaveFeedback}>\n      {good}\n    </button>\n    <button type=\"button\" name={neutral} onClick={onLeaveFeedback}>\n      {neutral}\n    </button>\n    <button type=\"button\" name={bad} onClick={onLeaveFeedback}>\n      {bad}\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statvalues = ({ name, value }) => <li>{`${name}: ${value}`}</li>;\n\nStatvalues.defaultProps = {\n  value: 0,\n};\n\nStatvalues.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default Statvalues;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Statvalues from './Statvalues';\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => (\n  <>\n    <h2>Statistics</h2>\n    <ul style={{ listStyle: 'none' }}>\n      <Statvalues name=\"Good\" value={good} />\n      <Statvalues name=\"Neutral\" value={neutral} />\n      <Statvalues name=\"Bad\" value={bad} />\n      <Statvalues name=\"Total\" value={total} />\n      <Statvalues name=\"Positive feedback\" value={positiveFeedback} />\n    </ul>\n  </>\n);\n\nStatistics.propTypes = {\n  good: propTypes.number.isRequired,\n  neutral: propTypes.number.isRequired,\n  bad: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  positiveFeedback: propTypes.string.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\n\nexport default class Section extends Component {\n  static defaultProps = {\n    title: 'Please leave feedback',\n  };\n\n  static propTypes = {\n    title: PropTypes.string,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countonLeaveFeedback = evt => {\n    const { name } = evt.target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotal = () => {\n    return Object.values(this.state).reduce((acc, e) => acc + e);\n  };\n\n  countPositiveFeedback = () => {\n    return `${((this.state.good / this.countTotal()) * 100).toFixed(0)}%`;\n  };\n\n  render() {\n    const { title } = this.props;\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n    const total = this.countTotal();\n    const positiveFeedbackPercentage = this.countPositiveFeedback();\n\n    return (\n      <section>\n        <h1>{title}</h1>\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={this.countonLeaveFeedback}\n        />\n        {this.countTotal() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedback={positiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport Section from './Section/Section';\n\nconst App = () => (\n  <>\n    <Section />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}